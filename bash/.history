# =============================================================================
##  HISTORY 
# - AUTO-SEARCH HISTORY -- CTRL + R
# - SUDO THE PREVIOUS COMMAND -- sudo !!
# =============================================================================

# History length SIZE
HISTSIZE=1000

# HISTORY FILESIZE
HISTFILESIZE=20000

# IGNORE DUPLICATE AND STARTS WIT SPACE
HISTCONTROL=ignoreboth:erasedups

# History Expansion
# =============================================================================
# https://www.gnu.org/software/bash/manual/html_node/History-Interaction.html#History-Interaction 
 
# EVENT DESIGNATORS
# - The line selected from the history
# -----------------------------------------------------------------------------
# An event designator is a reference to a command line entry in the history list. Unless the reference is absolute, events are relative to the current position in the history list.
#    !                   Start a history substitution, except when followed by a space, tab, the end of the line, '=' or '(' (when the extglob shell option is enabled using the shopt builtin).
#    !n                  Refer to command line n.
#    !-n                 Refer to the command n lines back.
#    !!                  Refer to the previous command a synonym for '!-1'.
#    !string             Refer to most recent command preceding current position in history list starting with string
#    !?string[?]         Refer to most recent command preceding current position in history list containing string. The trailing '?' may be omitted if the string is followed immediately by a newline.
#    ^string1^string2^   Quick Substitution. Repeat the last command, replacing string1 with string2. Equivalent to !!:s/string1/string2/.
#    !#                  The entire command line typed so far.

# WORD DESIGNATOR 
# The portions of that line that are acted upon
# -----------------------------------------------------------------------------
# Used to select words from events
# The ':' separates the event specification from the word designator

# It may be omitted if the word designator begins with '^', '$', '*', '-', or '%'. 
# Words are numbered from the first word the beginning of the line being 0  
# inserted word are separated by single spaces

# EXAMPLE
#    !!             the preceding command
#    !!:$           the last argument of the preceding command, can be shortened to `!$`
#    !fi:2          the second argument of most recent command starting with the letters `fi`

# OPTIONS:
#    0 (zero)      0th word. For many applications, this is the command word.
#    n             nth word.
#    ^             first argument; that is, word 1.
#    $             last argument.
#    %             word matched by the most recent '?string?' search.
#    x-y           A range of words; '-y' abbreviates '0-y'.
#    *             All of the words, except the 0th, a synonym for '1-$'. It is not an error to use '*' if there is just one word in the event; the empty string is returned 
#    x*            Abbreviates 'x-$'
#    x-            Abbreviates 'x-$' like 'x*', but omits the last word


# History expansions are introduced by the history expansion character -- '!' by default. 
# Only '\' and ''' may be used to escape the history expansion character
# the history expansion character is also treated as quoted if it immediately precedes the closing double quote in a double-quoted string
# -----------------------------------------------------------------------------

# If the histverify shell option is enabled, history substitutions are not immediately passed to the shell parser. 
# Instead, the expanded line is reloaded into the Readline
shopt -s histverify 

# if the histreedit shell option is enabled, a failed history expansion will be reloaded into the Readline editing buffer for correction
# shopt -s histreedit 



# HISTORY DATABASE
# =============================================================================

# APPEND DONT OVERWRITE 
shopt -s histappend

# multi-line commands are saved to the history with embedded newlines rather semicolon separators where possible
shopt -s lithist 


# IGNORE WORDS IN LIST

# 1. TRIVIAL AND TOO COMMON TO BE USEFUL 
HISTIGNORE='ls:ll:history:cd:..:pwd:cp:journalctl'
# 2. EXPOSES PERSONAL INFORMATION OR SECURITY DATA
HISTIGNORE=$HISTIGNORE':whoami:date:password:passwd:shadow:ssh:ssh-keygen:ssh-add:user:users:authorized:rsa:mysql'

## HISTORY FUNCTINONS
# =============================================================================
# SORT AND ARCHIVE CURRENT HISTORY THEN RESET THE HISTORY FILE
# -----------------------------------------------------------------------------
function backup_history () {
  PROFILE=$(USER)\_$(hostname)
  STAMP=$(date -d today +%y.%m.%d.%H%I%M%S)
  BACKUP_PATH=~/lib/bash
  
  OUTFILE=$PROFILE\_HISTORY.$STAMP

  echo "archiving command history..."
  echo $OUTFILE
  
  # TODO: INCLUDE IGNORE LIST TO REMOVE UNWANTED DATA
  cat ~/.bash_history | grep -x '.\{4,\}' | sort --ignore-case --unique --merge --dictionary-order > ~/.$PROFILE.$STAMP.bash_history
  wait
  mv ~/.bash_history.tmp $path/$output_file
  wait
  history -c && history -w
  echo "done" \;
}

alias history_sort="cat ~/.bash_history | grep -x '.\{3,\}' | sort --ignore-case --unique --merge > ~/.bash_history.tmp; wait; cp ~/.bash_history.tmp ~/.bash_history"


## Bash provides two builtin commands which manipulate the history list and history file.

# fc
#    fc [-e ename] [-lnr] [first] [last]
#    fc -s [pat=rep] [command]

## The first form selects a range of commands from first to last from the history list and displays or edits and re-executes them. 
## Both first and last may be specified as a string (to locate the most recent command beginning with that string) or as a number (an index into the history list, 
## where a negative number is used as an offset from the current command number). 
## If last is not specified it is set to first. If first is not specified it is set to the previous command for editing and -16 for listing.
## If the -l flag is given, the commands are listed on standard output.
## The -n flag suppresses the command numbers when listing. The -r flag reverses the order of the listing. 
## Otherwise, the editor given by ename is invoked on a file containing those commands. If ename is not given, 
## the value of the following variable expansion is used: ${FCEDIT:-${EDITOR:-vi}}. 
## This says to use the value of the FCEDIT variable if set, or the value of the EDITOR variable if that is set,
##  or vi if neither is set. When editing is complete, the edited commands are echoed and executed.

## In the second form, command is re-executed after each instance of pat in the selected command is replaced by rep. command is intepreted the same as first above. 

## EXAMPLE: 
#    alias r='fc -s'
# Results in typing 'r cc' runs the last command beginning with cc 
# and typing 'r' re-executes the last command 

#  Options
#   -c           Clear the history list. This may be combined with the other options to replace the history list completely.
#   -d offset    Delete the history entry at position offset. offset should be specified as it appears when the history is displayed.
#   -a           Append the new history lines to the history file. These are history lines entered since the beginning of the current Bash session, but not already appended to the history file.
#   -n           Append the history lines not already read from the history file to the current history list. These are lines appended to the history file since the beginning of the current Bash session.
#   -r           Read the history file and append its contents to the history list.
#   -w           Write out the current history list to the history file.
#   -p           Perform history substitution on the args and display the result on the standard output, without storing the results in the history list.
#   -s          The args are added to the end of the history list as a single entry.
#
#  When any of the -w, -r, -a, or -n options is used, if filename is given, then it is used as the history file. If not, then the value of the HISTFILE variable is used.


# The -p option to the history builtin command may be used to see what a history expansion will do before using it

